<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一护的Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-16T15:40:19.730Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>bleach一护</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式学习1</title>
    <link href="http://yoursite.com/2019/02/06/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F1/"/>
    <id>http://yoursite.com/2019/02/06/正则表达式1/</id>
    <published>2019-02-05T16:00:00.000Z</published>
    <updated>2019-03-16T15:40:19.730Z</updated>
    
    <content type="html"><![CDATA[<h3 id="正则表达式的初步学习"><a href="#正则表达式的初步学习" class="headerlink" title="正则表达式的初步学习"></a>正则表达式的初步学习</h3><p>第一次接触正则是在大二的时候，现在长时间不使用，有些概念比较模糊，因此准备重拾一下自己的知识。</p><hr><hr><ol><li><p>正则表达式是什么？</p><ul><li>正则表达式<em>在菜鸟教程中的概念如下</em>：<blockquote><p>正则表达式(regular expression)描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等</p></blockquote></li><li>我的个人理解就是来对文本进行匹配的。</li></ul></li><li><p>正则表达式的基础规则：</p><ul><li>位置标记： <strong>位置标记锚点</strong>是表识字符串位置的正则表达式。</li></ul></li></ol><table><thead><tr><th style="text-align:left">正则表达式</th><th style="text-align:left">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:left">^</td><td style="text-align:left">指定了匹配正则表达式的文本必须始于字符串的首部</td><td style="text-align:center">^zxc可匹配以zxc为首的行</td></tr><tr><td style="text-align:left">$</td><td style="text-align:left">指定了匹配正则表达式的文本必须始于字符串的尾部</td><td style="text-align:center">zxc$可匹配以zxc结尾的行</td></tr></tbody></table><ul><li>标识符: <strong>标识符是正则表达式的基础部分</strong></li></ul><table><thead><tr><th style="text-align:center">正则表达式</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">.</td><td style="text-align:center">匹配任意一个字符</td><td style="text-align:center">asq.可以匹配asq1或者asqe 但是不能匹配asqer 其只能匹配单个的字符</td></tr><tr><td style="text-align:center">[ ]</td><td style="text-align:center">匹配括号中的任意一个字符，中括号内可以为字符组或者字符范围</td><td style="text-align:center">par[kj]可以匹配park或者parj ,[0-9]可以匹配任意的单个数字</td></tr><tr><td style="text-align:center">[ ^ ]</td><td style="text-align:center">匹配不在中括号中的任意一个字符</td><td style="text-align:center">这个就比较好理解如 9[^12]就不能匹配91 或者 92</td></tr></tbody></table><ul><li>数量修饰符:  <strong>数量修饰符定义了模式可出现的次数</strong></li></ul><table><thead><tr><th style="text-align:left">正则表达式</th><th style="text-align:right">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:left">?</td><td style="text-align:right">只能够匹配之前的项1次或者0次</td><td style="text-align:center">courl?可以匹配courl 或者是cour</td></tr><tr><td style="text-align:left">+</td><td style="text-align:right">匹配之前的一项1次或者多次</td><td style="text-align:center">courl+ 可以匹配courl或者 courll 等等</td></tr><tr><td style="text-align:left">*</td><td style="text-align:right">可以匹配之前的一项0次或者多次</td><td style="text-align:center">c * ourl可以匹配 courl或者ccourl或者是ourl 等等</td></tr><tr><td style="text-align:left">{n}</td><td style="text-align:right">匹配之前的项n次</td><td style="text-align:center">如[0-9]{2} 能够匹配任意的两位数</td></tr><tr><td style="text-align:left">{n,}</td><td style="text-align:right">之前的项至少要匹配n次</td><td style="text-align:center">如[0-9]{4}能够匹配任意一个4位数或者更多位的数字</td></tr><tr><td style="text-align:left">{n,m}</td><td style="text-align:right">之前的项匹配的最小次数与最多次数</td><td style="text-align:center">[0-9]{2,5}匹配两位数到五位数之前的任何数字</td></tr></tbody></table><hr><p>正则表达式的基本规则大概就是这些，之后会给出如何匹配出你想要得到的数据</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;正则表达式的初步学习&quot;&gt;&lt;a href=&quot;#正则表达式的初步学习&quot; class=&quot;headerlink&quot; title=&quot;正则表达式的初步学习&quot;&gt;&lt;/a&gt;正则表达式的初步学习&lt;/h3&gt;&lt;p&gt;第一次接触正则是在大二的时候，现在长时间不使用，有些概念比较模糊，因此准备重
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
      <category term="正则表达式学习" scheme="http://yoursite.com/categories/Hexo/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="正则表达式学习" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>xpath中常用语法</title>
    <link href="http://yoursite.com/2019/02/04/xpath%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/02/04/xpath常用语法总结/</id>
    <published>2019-02-03T16:00:00.000Z</published>
    <updated>2019-03-14T04:32:21.673Z</updated>
    
    <content type="html"><![CDATA[<h3 id="xpath常用语法"><a href="#xpath常用语法" class="headerlink" title="xpath常用语法"></a>xpath常用语法</h3><ol><li>xpath是一门在XML文档中查找信息的语言，在爬虫中常用来查找信息，因此掌握其语法，可以帮助我们很好的去查找想要获得的信息。</li></ol><h5 id="如何来进行节点的选择"><a href="#如何来进行节点的选择" class="headerlink" title="如何来进行节点的选择"></a>如何来进行节点的选择</h5><ol><li><p>选择一个<strong>适当的节点</strong>，对于找寻信息至关重要。往往一个/或者//的选取会得到不同的信息，而且可能和你想像的相差甚远。接下来，就来说明几个重要的概念。</p></li><li><p>父节点与子节点:</p><ul><li>如下图所示:<br><img src="https://raw.githubusercontent.com/zxcpaozxc/zxcpaozxc.github.io/master/image/2.jpg" alt="xpath">的解释一样。</li></ul></li><li><p>下面来具体的讲讲如何来选取节点:</p><ul><li>xpath使用路径表达式在XML文档中选择节点的，节点是沿着路径或者step来选取的.</li><li><p>| 表达式 | 描述 |<br>| —— | —— |<br>|    /   |  从根节点来选取  |<br>|   //   |  从当前节点进行选取，不考虑其位置 |<br>|  @   |  选取属性 |<br>| .| 选取当前节点 |</p></li><li><p>以一个例子来实际操作一下:<br><img src="https://raw.githubusercontent.com/zxcpaozxc/zxcpaozxc.github.io/master/image/3.jpg" alt="豆瓣电影title"><br>先选取其父节点，然后依次来找出信息所在位置的节点信息，最后获得其内容<br>当然，一般浏览器都可以自动获得xpath，但是还是有必要学习一下，以此为例子，我们能够看出来实际中如何取操作这些节点来得到我们想要得到的消息.</p></li></ul></li></ol><h4 id="最后来推荐一个chrome插件，来帮助大家来学习xpath，叫做xpath-helper"><a href="#最后来推荐一个chrome插件，来帮助大家来学习xpath，叫做xpath-helper" class="headerlink" title="最后来推荐一个chrome插件，来帮助大家来学习xpath，叫做xpath helper"></a>最后来推荐一个chrome插件，来帮助大家来学习xpath，叫做<strong>xpath helper</strong></h4><hr><p><strong><em>前提是你可以科学上网</em></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;xpath常用语法&quot;&gt;&lt;a href=&quot;#xpath常用语法&quot; class=&quot;headerlink&quot; title=&quot;xpath常用语法&quot;&gt;&lt;/a&gt;xpath常用语法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;xpath是一门在XML文档中查找信息的语言，在爬虫中常用来查找信息，因
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
      <category term="python爬虫" scheme="http://yoursite.com/categories/Hexo/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="python爬虫" scheme="http://yoursite.com/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>用lxml与requests模块爬取起点中文网的免费阅读列表</title>
    <link href="http://yoursite.com/2019/02/03/%E7%94%A8python%E4%B8%AD%E7%9A%84lxml%E6%A8%A1%E5%9D%97%E7%88%AC%E5%8F%96%E8%B5%B7%E7%82%B9%E7%BD%91%E5%85%8D%E8%B4%B9%E9%98%85%E8%AF%BB%E5%88%97%E8%A1%A8/"/>
    <id>http://yoursite.com/2019/02/03/用python中的lxml模块爬取起点网免费阅读列表/</id>
    <published>2019-02-02T16:00:00.000Z</published>
    <updated>2019-03-10T03:35:57.332Z</updated>
    
    <content type="html"><![CDATA[<h5 id="用lxml与requests模块爬取起点中文网的免费阅读列表"><a href="#用lxml与requests模块爬取起点中文网的免费阅读列表" class="headerlink" title="用lxml与requests模块爬取起点中文网的免费阅读列表"></a>用lxml与requests模块爬取起点中文网的免费阅读列表</h5><p><strong>爬取的思路:</strong></p><ul><li><p>首先来讲,爬取内容并非是最重要的,我个人认为要先知道思路,然后再去写代码,就会容易很多。</p></li><li><p>再就来说说，要写这个爬虫的思路:</p><ul><li><p>首先，应该先看看网站的robots.txt文件，来看一下网站上什么内容可以，让我们去爬取,这里附上其内容，可以看到起点是应该全都可让我们去爬的，然后放心的去写代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> User-Agent: *</span><br><span class="line">Allow: /</span><br><span class="line">Allow: /*.css</span><br><span class="line">Allow: /*.js</span><br></pre></td></tr></table></figure></li><li><p>接下来，就是要获得其URL资源，注意到起点网上的free区的URL是如下的，然后我们尝试着去删除一些无用的信息，来简化URL,来获得同样的页面。<br><code>https://www.qidian.com/free/all?orderId=&amp;vip=hidden&amp;style=1&amp;pageSize=20&amp;siteid=1&amp;pubflag=0&amp;hiddenField=1&amp;page=2</code><br>通过尝试我们只要留下 <em>all?page=2</em> 这一部分就可以获得我们想要的结果。于是修改URL为<code>https://www.qidian.com/free/all?page={}</code>这样可以通过<em>format()</em> 方法来构造我们要爬取多少页。</p></li><li><p>下一步，就要去构造xpath，来获得数据,在chrome浏览器中按<strong>F12</strong>来查看网页的源码，接着我们就要去找到信息的位置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;book-mid-info&quot;&gt;</span><br><span class="line">                          &lt;h4&gt;&lt;a href=&quot;//book.qidian.com/info/1010741811&quot; target=&quot;_blank&quot; data-eid=&quot;qd_E05&quot; data-bid=&quot;1010741811&quot;&gt;大劫主&lt;/a&gt;&lt;/h4&gt;</span><br></pre></td></tr></table></figure></li></ul><p>对于此xml的节点，我们要得到一个book的名字就只要用<strong>etree下的xpath方法</strong>，<br>就可以得到想要的信息。代码如下：<code>xpath(&quot;//div[@class=&#39;book-img-text&#39;]//h4//a/text()&quot;)</code>这样就可以得到我们想要的数据了。但是有的地方可能有”\r”或者是空格只要用replace()方法替代一下就可以了。</p></li></ul><h5 id="最后附上全部的代码："><a href="#最后附上全部的代码：" class="headerlink" title="最后附上全部的代码："></a>最后附上全部的代码：</h5><p>附:爬取的结果图：<br><img src="https://github.com/zxcpaozxc/zxcpaozxc.github.io/raw/master/image/1.jpg" alt="结果"><br><em>这样就可以基本上爬到想要的信息了</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">from lxml import etree</span><br><span class="line"></span><br><span class="line">class qidian:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.headers =&#123;&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36&quot;&#125;</span><br><span class="line">        self.start_url=&quot;https://www.qidian.com/free/all?page=&#123;&#125;&quot;</span><br><span class="line"></span><br><span class="line">    def get_free_url_List(self):</span><br><span class="line">        return [self.start_url.format(i) for i in range(1,120)]</span><br><span class="line"></span><br><span class="line">    def parse_url(self,url):</span><br><span class="line">        response=requests.get(url,headers=self.headers)</span><br><span class="line">        return response.content</span><br><span class="line"></span><br><span class="line">    def get_url_list(self,html_url):</span><br><span class="line">        html=etree.HTML(html_url)</span><br><span class="line">        div_lists=html.xpath(&quot;//div[@class=&apos;all-book-list&apos;]&quot;)</span><br><span class="line">        content_list=[]</span><br><span class="line">        for div in div_lists:</span><br><span class="line">            item=&#123;&#125;</span><br><span class="line">            item[&quot;title&quot;]=div.xpath(&quot;.//h4/a/text()&quot;)</span><br><span class="line">            item[&quot;title&quot;]=item[&quot;title&quot;][0] if len(item[&quot;title&quot;][0])&gt;0 else None</span><br><span class="line">            item[&quot;author&quot;]=div.xpath(&quot;.//p[@class=&apos;author&apos;]//a[@class=&apos;name&apos;]/text()&quot;)</span><br><span class="line">            item[&quot;author&quot;]=item[&quot;author&quot;][0] if len(item[&quot;author&quot;][0])&gt;0 else None</span><br><span class="line">            item[&quot;content-sum&quot;]=div.xpath(&quot;.//p[@class=&apos;intro&apos;]/text()&quot;)</span><br><span class="line">            item[&quot;content-sum&quot;]=[div.replace(&quot;\r&quot;,&quot;&quot;) for div in item[&quot;content-sum&quot;]]</span><br><span class="line">            item[&quot;content-sum&quot;]=[div.replace(&quot; &quot;,&quot;&quot;) for div in item[&quot;content-sum&quot;]]</span><br><span class="line">            item[&quot;href&quot;]=&quot;https:&quot;+div.xpath(&quot;.//h4/a/@href&quot;)[0] if len(div.xpath(&quot;.//h4/a/@href&quot;)[0])&gt;0 else None</span><br><span class="line">            item[&quot;img&quot;]=&quot;https:&quot;+div.xpath(&quot;.//div[@class=&apos;book-img-box&apos;]//img/@src&quot;)[0] if len(div.xpath(&quot;.//div[@class=&apos;book-img-box&apos;]//img/@src&quot;)[0])&gt;0 else None</span><br><span class="line">            content_list.append(item)</span><br><span class="line">        return content_list</span><br><span class="line"></span><br><span class="line">    def save_content(self,content_list):</span><br><span class="line">        with open(&quot;起点中文网免费文章1.txt&quot;,&quot;a&quot;,encoding=&apos;utf-8&apos; ) as f:</span><br><span class="line">            for i in content_list:</span><br><span class="line">                 f.write(json.dumps(i, ensure_ascii=False))</span><br><span class="line">                 f.write(&quot;\n&quot;)  # 写入换行符，进行换行     </span><br><span class="line">        print(&quot;保存成功！&quot;)</span><br><span class="line"></span><br><span class="line">    def run(self):</span><br><span class="line">        # 发送请求，获得响应</span><br><span class="line">        # 接收数据，并处理数据</span><br><span class="line">        # 保存数据</span><br><span class="line">        url_list=self.get_free_url_List()</span><br><span class="line">        for url in url_list:</span><br><span class="line">            html_url=self.parse_url(url)</span><br><span class="line">            content_list=self.get_url_list(html_url)</span><br><span class="line">            self.save_content(content_list)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    spider_qidian=qidian()</span><br><span class="line">    spider_qidian.run()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;用lxml与requests模块爬取起点中文网的免费阅读列表&quot;&gt;&lt;a href=&quot;#用lxml与requests模块爬取起点中文网的免费阅读列表&quot; class=&quot;headerlink&quot; title=&quot;用lxml与requests模块爬取起点中文网的免费阅读列表&quot;&gt;
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
      <category term="python爬虫" scheme="http://yoursite.com/categories/Hexo/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="python爬虫" scheme="http://yoursite.com/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>python导入lxml中的etree模块</title>
    <link href="http://yoursite.com/2019/02/01/lxml%E6%A8%A1%E5%9D%97%E7%9A%84%E4%B8%8B%E8%BD%BD/"/>
    <id>http://yoursite.com/2019/02/01/lxml模块的下载/</id>
    <published>2019-01-31T16:00:00.000Z</published>
    <updated>2019-03-09T03:52:46.805Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python导入lxml中的etree模块"><a href="#python导入lxml中的etree模块" class="headerlink" title="python导入lxml中的etree模块"></a>python导入lxml中的etree模块</h2><ul><li><p>首先，使用pycharm中自带的下载器，下载的是不带etree模块的</p></li><li><p>再一点就是，看网上说<em>部分lxml版本是不含etree模块的</em>应该去找能和自己python版本兼容而且有etree模块的lxml版本</p></li><li><p>可以去官网上下载自己想要的版本<br>官网可用版本链接 <a href="https://pypi.org/project/lxml/3.7.2/#files" target="_blank" rel="noopener">官网</a></p></li></ul><h4 id="如何去安装lxml模块"><a href="#如何去安装lxml模块" class="headerlink" title="如何去安装lxml模块"></a>如何去安装lxml模块</h4><ul><li><p>下载好这样一个文件:<strong>lxml-3.7.2-cp36-cp36m-win32.whl</strong> 后在cmd中用</p><p> <code>pip install lxml-3.7.2-cp36-cp36m-win32.whl</code></p></li><li><p>看提示安装完成后，在cmd中测试查看是否可以使用etree模块,就是进入<em>python</em>,导入<em>etree</em>模块:<code>from lxml import etree</code>,若不报错，说明成功，否则就要检查是哪里出现了问题</p></li><li><p><strong>注意命名文件时不要和这些模块重名，这样也会导入不成功</strong></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;python导入lxml中的etree模块&quot;&gt;&lt;a href=&quot;#python导入lxml中的etree模块&quot; class=&quot;headerlink&quot; title=&quot;python导入lxml中的etree模块&quot;&gt;&lt;/a&gt;python导入lxml中的etree模块&lt;/
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
      <category term="python爬虫" scheme="http://yoursite.com/categories/Hexo/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="python爬虫" scheme="http://yoursite.com/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/10/01/hello-world/"/>
    <id>http://yoursite.com/2018/10/01/hello-world/</id>
    <published>2018-09-30T16:00:00.000Z</published>
    <updated>2019-03-09T03:53:34.973Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
